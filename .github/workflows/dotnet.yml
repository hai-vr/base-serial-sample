# This file is a mashup of several sources, including:
# - https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions
# - https://github.com/vrchat-community/template-package/blob/main/.github/workflows/release.yml
# - and some improv

name: .NET

on:
  workflow_dispatch:

env:
  outputAppFolder: "PositionSystemToExternalProgram"
  netProject: "program"
  netCsProj: "program/program.csproj"
  packageName: "dev.hai-vr.alleyway.position-system-to-external-program"
  applicationName: "position-system"

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "Packages/${{env.packageName}}/package.json"
          prop_path: "version"
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Build
        shell: bash
        run: |
          SEMVER_VERSION=${{ steps.version.outputs.prop }}
          # Convert semver to assembly version format
          # Extract the base version (everything before the first hyphen)
          BASE_VERSION=$(echo "$SEMVER_VERSION" | cut -d'-' -f1)
          
          # If there's a pre-release part, extract it
          if [[ "$SEMVER_VERSION" == *"-"* ]]; then
            PRERELEASE=$(echo "$SEMVER_VERSION" | cut -d'-' -f2-)
          
            # Extract the numeric part from prerelease (e.g., "13" from "alpha.13")
            PRERELEASE_NUM=$(echo "$PRERELEASE" | grep -o '[0-9]\+$' || echo "0")
          
            # Assign different ranges based on prerelease type
            if [[ "$PRERELEASE" == alpha* ]]; then
              # Alpha: use 1000-1999 range
              REVISION=$((1000 + PRERELEASE_NUM))
            elif [[ "$PRERELEASE" == beta* ]]; then
              # Beta: use 2000-2999 range  
              REVISION=$((2000 + PRERELEASE_NUM))
            else
              # Other prerelease types: use 9000+ range
              REVISION=$((9000 + PRERELEASE_NUM))
            fi
          
            export ASSEMBLY_VERSION="${BASE_VERSION}.${REVISION}"
          else
            # No pre-release, use .0 as revision (stable release)
            export ASSEMBLY_VERSION="${BASE_VERSION}.0"
          fi
          
          echo "Converting semver $SEMVER_VERSION to assembly version $ASSEMBLY_VERSION"
          dotnet publish ${{env.netCsProj}} --runtime "${{ matrix.target }}" -c Release -o "App/${{env.outputAppFolder}}"

      - name: Create Zip
        uses: thedoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
        with:
          type: "zip"
          directory: "Packages/${{env.packageName}}/"
          filename: "../../${{ env.packageName }}-${{ steps.version.outputs.prop }}.zip" # make the zip file two directories up, since we start two directories in above

      - name: Create Zip (App)
        uses: thedoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
        with:
          type: "zip"
          directory: "App/"
          filename: "../${{ env.applicationName }}-${{ steps.version.outputs.prop }}-executable.zip"

      - name: Make Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          files: |
            ${{ env.packageName }}-${{ steps.version.outputs.prop }}.zip
            Packages/${{ env.packageName }}/package.json
            ${{ env.applicationName }}-${{ steps.version.outputs.prop }}-executable.zip